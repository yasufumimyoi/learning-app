rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
  
    function isAuthenticated() {
      return request.auth != null
    }

    function isUserAuthenticated(uid){
      return isAuthenticated() && request.auth.uid == uid;
    }

    function incomingData() {
      return request.resource.data;
    }
    
    match /users/{userID}/videos/{videoID} {
      allow read: if isUserAuthenticated(userID)
      allow create: if isUserAuthenticated(userID) 
        && incomingData().size() == 9
        && (incomingData().id != null) && (incomingData().id is string)
        && (incomingData().title != null) && (incomingData().title is string)
        && (incomingData().image != null) && (incomingData().image is string)
        && (incomingData().path != null) && (incomingData().path is string)
        && (incomingData().completed != null) && (incomingData().completed is bool)
        && (incomingData().category != null) && (incomingData().category is string)
        && (incomingData().clickableBtn != null) && (incomingData().clickableBtn is bool)
        && (incomingData().flag != null) && (incomingData().flag is bool)
      allow update: if isUserAuthenticated(userID)
        && incomingData().size() == 9
        && (incomingData().id != null) && (incomingData().id is string)
        && (incomingData().title != null) && (incomingData().title is string)
        && (incomingData().image != null) && (incomingData().image is string)
        && (incomingData().path != null) && (incomingData().path is string)
        && (incomingData().completed != null) && (incomingData().completed is bool)
        && (incomingData().category != null) && (incomingData().category is string)
        && (incomingData().clickableBtn != null) && (incomingData().clickableBtn is bool)
        && (incomingData().flag != null) && (incomingData().flag is bool)
      && (incomingData().title != null) && (incomingData().title is string)
        && (incomingData().completed != null) && (incomingData().completed is bool)
        && (incomingData().flag != null) && (incomingData().completed is bool)
      allow delete: if isUserAuthenticated(userID)
    }
    
    match /users/{userID}/profile/{profileID} {
      allow read: if isUserAuthenticated(userID)
      allow create: if isUserAuthenticated(userID)
        && (incomingData().name != null) && (incomingData().name is string) && (incomingData().name.size() == 0)
        && (incomingData().location != null) && (incomingData().location is string) && (incomingData().location.size() == 0)
        && (incomingData().comment != null) && (incomingData().comment is string) && (incomingData().comment.size() == 0)
        && (incomingData().image != null) && (incomingData().image is string) && (incomingData().image.size() == 0) 
      allow update: if isUserAuthenticated(userID)
        && (incomingData().name != null) && (incomingData().name is string) && (incomingData().name.size() < 20)
        && (incomingData().location != null) && (incomingData().location is string) && (incomingData().location.size() < 20)
        && (incomingData().comment != null) && (incomingData().comment is string) && (incomingData().comment.size() < 30)
        && (incomingData().image != null) && (incomingData().image is string) && (incomingData().image.size() < 200) 
      allow delete: if isUserAuthenticated(userID)
    }

    match /activity/{userID} {
      allow read: if isUserAuthenticated(userID)
      allow create: if isUserAuthenticated(userID)
        && incomingData().size() == 2
        && (incomingData().title != null) && (incomingData().title is string)
        && (incomingData().createdAt != null) && (incomingData().createdAt is timestamp)
      allow update: if isUserAuthenticated(userID)
        && incomingData().size() == 2
        && (incomingData().title != null) && (incomingData().title is string)
        && (incomingData().createdAt != null) && (incomingData().createdAt is timestamp)
    }

    match /videoData/{videoID=**} {
      allow read: if true
    }

    match /course/{courseID=**} {
      allow read: if true
    }

    match /activity/{userID} {
      allow read: if isAuthenticated()
      allow create: if isUserAuthenticated(userID)
      allow update: if isUserAuthenticated(userID)
    }
  }
}
